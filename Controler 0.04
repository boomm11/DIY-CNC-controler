using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace DIY_CNC_Csharp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            Xpos.Text = ("0");
            Ypos.Text = ("0");
            Zpos.Text = ("0");
            FeedDir.BackColor = (Color.Green);
            manoraut.BackColor = (Color.Green);
        }

        public void xup()
        {
            if (manoraut.BackColor == (Color.Green))
                {
                string xpos = (Xpos.Text);
                int xpossi = int.Parse(xpos);
                string numberpospossi = (xpossi + 1).ToString();
                Xpos.Text = (numberpospossi);
            }
        }

        public void xdown()
        {
            if (manoraut.BackColor == (Color.Green))
            {
                string xpos = (Xpos.Text);
                int xpossi = int.Parse(xpos);
                string numberpospossi = (xpossi - 1).ToString();
                Xpos.Text = (numberpospossi);
            }
        }

        public void yup()
        {
            if (manoraut.BackColor == (Color.Green))
            {
                string ypos = (Ypos.Text);
                int ypossi = int.Parse(ypos);
                string numberpospossi = (ypossi + 1).ToString();
                Ypos.Text = (numberpospossi);
            }
        }

        public void ydown()
        {
            if (manoraut.BackColor == (Color.Green))
            {
                string ypos = (Ypos.Text);
                int ypossi = int.Parse(ypos);
                string numberpossi = (ypossi - 1).ToString();
                Ypos.Text = (numberpossi);
            }
        }

        public void zup()
        {
            if (manoraut.BackColor == (Color.Green))
            {
                string zpos = (Zpos.Text);
                int zpossi = int.Parse(zpos);
                string numberpossi = (zpossi + 1).ToString();
                Zpos.Text = (numberpossi);
            }
        }

        public void zdown()
        {
            if (manoraut.BackColor == (Color.Green))
            {
                string zpos = (Zpos.Text);
                int zpossi = int.Parse(zpos);
                string numberpossi = (zpossi - 1).ToString();
                Zpos.Text = (numberpossi);
            }
        }

        public void feedstop()
        {
            FeedXup.Stop();
            FeedXdown.Stop();
            FeedYup.Stop();
            FeedYdown.Stop();
            FeedZup.Stop();
            FeedZdown.Stop();
        }

        private void Start_Click(object sender, EventArgs e)
        {

        }

        private void Pause_Click(object sender, EventArgs e)
        {

        }

        private void Stop_Click(object sender, EventArgs e)
        {

        }

        private void aut_Click(object sender, EventArgs e)
        {
            manoraut.BackColor = (Color.Red);
            FeedDir.BackColor = (Color.Red);
        }

        private void man_Click(object sender, EventArgs e)
        {
            manoraut.BackColor = (Color.Green);
            FeedDir.BackColor = (Color.Green);
        }

        private void Xplus_Click(object sender, EventArgs e)
        {
            xup();
        }

        private void Xminus_Click(object sender, EventArgs e)
        {
            xdown();
        }

        private void Yplus_Click(object sender, EventArgs e)
        {
            yup();
        }

        private void Yminus_Click(object sender, EventArgs e)
        {
            ydown();
        }

        private void Zplus_Click(object sender, EventArgs e)
        {
            zup();
        }

        private void Zminus_Click(object sender, EventArgs e)
        {
            zdown();
        }

        private void XplusFeed_Click(object sender, EventArgs e)
        {
            if (FeedDir.BackColor == (Color.Green))
            {
                feedstop();
                FeedXup.Start();
            }
        }

        private void XminusFeed_Click(object sender, EventArgs e)
        {
            if (FeedDir.BackColor == (Color.Green))
            {
                feedstop();
                FeedXdown.Start();
            }
        }

        private void ZplusFeed_Click(object sender, EventArgs e)
        {
            if (FeedDir.BackColor == (Color.Green))
            {
                feedstop();
                FeedZup.Start();
            }
        }

        private void ZminusFeed_Click(object sender, EventArgs e)
        {
            if (FeedDir.BackColor == (Color.Green))
            {
                feedstop();
                FeedZdown.Start();
            }
        }

        private void YplusFeed_Click(object sender, EventArgs e)
        {
            if (FeedDir.BackColor == (Color.Green))
            {
                feedstop();
                FeedYup.Start();
            }
        }

        private void YminusFeed_Click(object sender, EventArgs e)
        {
            if (FeedDir.BackColor == (Color.Green))
            {
                feedstop();
                FeedYdown.Start();
            }
        }

        private void Feedstop_Click(object sender, EventArgs e)
        {
            if (FeedDir.BackColor == (Color.Green))
            {
                feedstop();
            }
        }
    }
}
